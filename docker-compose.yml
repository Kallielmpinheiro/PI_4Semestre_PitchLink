services:
  angular:
    build:
      context: ./frontend
    container_name: angular_app
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.angular/cache
    networks:
      - app_network
    depends_on:
      - django
    command: ng serve --host 0.0.0.0 --poll 2000

  django:
    build:
      context: ./backend
    container_name: django_app
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    networks:
      - app_network
    depends_on:
      db:
        condition: service_healthy
    command: python manage.py runserver 0.0.0.0:8000

  db:
    image: postgres:13.5
    container_name: PI4SEM
    environment:
      - POSTGRES_DB=PI4SEM
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge